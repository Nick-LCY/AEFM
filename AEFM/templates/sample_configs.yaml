# Where to store files
file_paths:
  # Output data of data collector
  collector_data: data
  # Log file
  log: log/social.log
  # YAML repository that saves YAML files of different applications
  # $MODULE_DEFAULT means using the module provided YAML repository
  # In module provided YAML repository, there are 4 folders:
  # social_network, hotel_reserv, train_ticket, media_microsvc
  yaml_repo: $MODULE_DEFAULT/social
  wrk_output_path: tmp/wrk

# Application name, 4 optional names: social, hotel, media, train
app: social
# HTTP port of application, used for writing data
port: 30628
# Deployment replicas config for stateless microservices
replicas:
  user-timeline-service: 4
  home-timeline-service: 4
  post-storage-service: 4
# Namespace used in this experiment
namespace: social-network
# Docker image used to create containers
app_img: nicklin9907/aefm:social-1.1
# Duration of single test case
duration: 40
# Prometheus API address
prometheus_host: http://localhost:30090
# Jaeger API address
jaeger_host: http://localhost:30094
# Jaeger entrance microservice
jaeger_entrance: nginx-web-server
# Available nodes, based on their roles, will assign different microservices on them.
nodes:
  # Name of nodes
- name: 06-worker
  # List of roles, defaultly available: testbed and infra
  roles:
  - testbed
  - infra
  # IP address, optional
- name: 07-worker
  roles:
  - testbed
  - infra
# Pod resource limiation, same as requests/limits part in Kubernetes
pod_spec:
  cpu_size: 0.1
  mem_size: 200Mi
test_cases:
  # Config loader will generate test cases cover all possible
  # combinations of all items in orders.
  orders:
  - workload
  - rounds
  - mem_capacity
  - cpu
  rounds:
    min: 1
    max: 2
    step: 1
  workload:
    configs:
      threads: 1
      connections: 1
      rate: 1
      # Similar to yaml_repository, module provides some default scripts.
      script: $MODULE_DEFAULT/social/read-home-timeline.lua
      url: http://localhost:30628
    range:
      min: 1
      max: 2
      step: 1

  interferences:
    mem_capacity:
      configs:
        cpu_size: 0.01
        mem_size: 4Gi
      range:
      - 1
      - 2
    cpu:
      configs:
        cpu_size: 1
        mem_size: 200Mi
      range:
        min: 1
        max: 10
        step: 1
  sample_customize:
    - 1
    - 2
    - 3
    - 4
